# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: block.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='block.proto',
  package='blockchain',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x0b\x62lock.proto\x12\nblockchain\"H\n\x05\x42lock\x12\r\n\x05nonce\x18\x01 \x01(\x04\x12\x0c\n\x04hash\x18\x02 \x01(\t\x12\x11\n\tprev_hash\x18\x03 \x01(\t\x12\x0f\n\x07tx_root\x18\x04 \x01(\t\"!\n\x0b\x42lockParams\x12\x12\n\ndifficulty\x18\x01 \x01(\x04\x62\x06proto3'
)




_BLOCK = _descriptor.Descriptor(
  name='Block',
  full_name='blockchain.Block',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nonce', full_name='blockchain.Block.nonce', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hash', full_name='blockchain.Block.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prev_hash', full_name='blockchain.Block.prev_hash', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tx_root', full_name='blockchain.Block.tx_root', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=99,
)


_BLOCKPARAMS = _descriptor.Descriptor(
  name='BlockParams',
  full_name='blockchain.BlockParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='difficulty', full_name='blockchain.BlockParams.difficulty', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=134,
)

DESCRIPTOR.message_types_by_name['Block'] = _BLOCK
DESCRIPTOR.message_types_by_name['BlockParams'] = _BLOCKPARAMS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Block = _reflection.GeneratedProtocolMessageType('Block', (_message.Message,), {
  'DESCRIPTOR' : _BLOCK,
  '__module__' : 'block_pb2'
  # @@protoc_insertion_point(class_scope:blockchain.Block)
  })
_sym_db.RegisterMessage(Block)

BlockParams = _reflection.GeneratedProtocolMessageType('BlockParams', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKPARAMS,
  '__module__' : 'block_pb2'
  # @@protoc_insertion_point(class_scope:blockchain.BlockParams)
  })
_sym_db.RegisterMessage(BlockParams)


# @@protoc_insertion_point(module_scope)
